{"version":3,"sources":["components/navbar.js","const/particles.js","components/header.js","img/aboutme.jpg","components/about.js","components/skills.js","img/book.png","img/profile.png","img/expanse.png","components/portfolio.js","components/contact.js","components/footer.js","components/resume.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","className","type","icon","faBars","style","color","id","smooth","component","to","particles","header","params","about","src","author","alt","skills","title","Portfolio","isMobile","useMediaQuery","query","book","class","href","checkmate","expanse","Contact","form","useRef","useState","successMessage","setSuccessMessage","useForm","criteriaMode","register","handleSubmit","errors","formState","serviceID","templateID","userID","sendEmail","emailjs","send","current","then","catch","err","console","error","onSubmit","data","r","name","email","subject","message","target","reset","placeholder","required","maxLength","pattern","render","messages","Object","entries","map","value","footer","resume","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34285a8a.chunk.js","sourcesContent":["// Import React //\r\nimport React from 'react'\r\n// React Font Awesome Import //\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// Hamburger menu svg icon //\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n// Import React-scroll //\r\nimport { Link } from 'react-scroll';\r\n// Import Scroll to Top npm //\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n// React-Icons //\r\nimport { BsArrowUpCircle } from 'react-icons/bs';\r\n\r\n// NAVBAR //\r\nconst navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n            {/* Navbar Hamburger Menu for mobile responsivity */}\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                 {/* IMPORT Font Awesome Bars SVG Icon */}\r\n                 < FontAwesomeIcon icon = {faBars} style = {{ color: '#ffffff'}}/>\r\n            </button>\r\n            <div className=\"container\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mx-auto\">\r\n                        {/* Scroll to top option */}\r\n                        <ScrollToTop smooth component={<BsArrowUpCircle/>} />\r\n                        <li className=\"nav-item\">\r\n                            <Link smooth={true} to=\"about\" className=\"nav-link\">About</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link smooth={true} to=\"portfolio\" className=\"nav-link\" >Work</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link smooth={true} to=\"skills\" className=\"nav-link\">Skills</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link smooth={true} to=\"resume\" className=\"nav-link\" >Resume</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link smooth={true} to=\"contact\" className=\"nav-link\">Contact</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n// Export Navbar //\r\nexport default navbar \r\n","const particles = {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 100,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 800\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#ffffff\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"star\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#ffffff\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 5\r\n        },\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 2.5,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 90,\r\n          \"size_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": true,\r\n        \"distance\": 160,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 0.4,\r\n        \"width\": 1\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 2.5,\r\n        \"direction\": \"none\",\r\n        \"random\": true,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": true,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 2200,\r\n          \"rotateY\": 1600\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"window\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": true,\r\n          \"mode\": \"grab\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": true,\r\n          \"mode\": \"push\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 85,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 75,\r\n          \"duration\": 3,\r\n          \"opacity\": 8,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 100,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\nexport default particles","// Import React //\nimport React from 'react';\n// Import React-Typed //\nimport Typed from 'react-typed';\n// Import Particles //\nimport Particles from \"react-tsparticles\";\nimport particles from '../const/particles';\n\nconst header = () => {\n    return (\n        <div className=\"header-wrapper\">\n            {/* <Particles\n                params={particles}\n                className=\"particles\"\n            /> */}\n            <div className=\"row\">\n                <div className=\"main-info\" id=\"overlay\">\n                    <div className=\"header-text responsive-headline\">\n                        <h1 className=\"responsive-headline\"> I'm Hannah McDonald.</h1>\n                        <h3>I'm an Atlanta based <b> Full-Stack Web Developer.</b></h3>\n\n                        {/* <Typed \n                        className=\"typed-text\"\n                        strings={[\"I'm an Atlanta based <b> Full-Stack Web Developer.</b>\"]}\n                        typeSpeed={50}\n                        /> */}\n                    </div>\n                    <Particles\n                        params={particles}\n                        className=\"particles\"\n                    />\n                </div>\n            </div>\n         </div>\n    )\n}\n\nexport default header","export default __webpack_public_path__ + \"static/media/aboutme.75dbf44a.jpg\";","// Import React //\r\nimport React from 'react';\r\n// Import about me image //\r\nimport author from \"../img/aboutme.jpg\";\r\n\r\nconst about = () => {\r\n    return (\r\n        <div className=\"container py-5 about-container\">\r\n           <div className=\"row text-center\">\r\n               <div className=\"col-lg-6 col-xs-12\">\r\n                    <div className=\"photo-wrap mb-5\">\r\n                        <img className=\"about-img\" src={author} alt=\"author\"></img>\r\n                    </div>\r\n               </div>\r\n               <div className=\"col-lg-6 col-xs-12\">\r\n                    <h1 className=\"about\">\r\n                       About\r\n                    </h1>\r\n                    <h5 className=\"about-text\">\r\n                    I'm a Full-Stack Developer who's passionate about creating innovative web experiences. I graduated from Georgia Tech's Full Stack Coding Bootcamp in 2021 and have fallen in love with the combination of creativity and problem-solving that I have found in Web Development. Check out some of my work below!\r\n                    </h5>\r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default about\r\n","// Import React //\r\nimport React from 'react';\r\n// Import Skills Icons //\r\nimport {\r\n    FaHtml5,\r\n    FaCss3,\r\n    FaBootstrap,\r\n    FaReact,\r\n    FaNpm,\r\n    FaGitAlt,\r\n    FaGithubSquare,\r\n    FaVuejs\r\n  } from \"react-icons/fa\";\r\nimport { \r\n    SiMysql, \r\n    SiMongodb,\r\n    SiJquery,\r\n    SiSequelize,\r\n    SiGraphql,\r\n    SiJavascript,\r\n    SiHandlebarsdotjs,\r\n    SiMaterialui,\r\n    SiApollographql,\r\n    SiDotnet,\r\n    SiTypescript\r\n} from \"react-icons/si\";\r\n\r\nconst skills = () => {\r\n    return (\r\n        <div className=\"skills-wrapper\">\r\n            <div className=\" skills-container container\"> \r\n            <h1>Skills</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg\">\r\n                        <FaHtml5 className=\"display-4\" title=\"HTML5\"/>\r\n                        <FaCss3 className=\"display-4\" title=\"CSS3\"/>\r\n                        <FaBootstrap className=\"display-4\" title=\"Bootstrap\"/>\r\n                        <FaReact className=\"display-4\" title=\"React\"/>\r\n                        <FaNpm className=\"display-4\" title=\"npm\"/>\r\n                        <FaGitAlt className=\"display-4\" title=\"Git\"/>\r\n                        <FaGithubSquare className=\"display-4\" title=\"Github\"/>\r\n                        <SiMysql className=\"display-4\" title=\"SQL\"/>\r\n                        <SiMongodb className=\"display-4\" title=\"MongoDB\"/>\r\n                        <SiJquery className=\"display-4\" title=\"JQuery\"/>\r\n                        <SiSequelize className=\"display-4\" title=\"Sequelize\"/>\r\n                        <SiGraphql className=\"display-4\" title=\"GraphQL\"/>\r\n                        <SiJavascript className=\"display-4\" title=\"Javascript\"/>\r\n                        <SiHandlebarsdotjs className=\"display-4\" title=\"Handlebars\"/>\r\n                        <SiMaterialui className=\"display-4\" title=\"Material UI\"/>\r\n                        <SiApollographql className=\"display-4\" title=\"Apollo GraphQL\"/>\r\n                        <FaVuejs className=\"display-4\" title=\"Vue.js\"/>\r\n                        <SiDotnet className=\"display-4\" title=\".NET\"/>\r\n                        <SiTypescript className=\"display-4\" title=\"Typescript\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default skills","export default __webpack_public_path__ + \"static/media/book.56181ebc.png\";","export default __webpack_public_path__ + \"static/media/profile.624b2881.png\";","export default __webpack_public_path__ + \"static/media/expanse.1d0b2b5a.png\";","// Import React //\r\nimport React from 'react';\r\n// Portfolio Images //\r\nimport book from \"../img/book.png\"\r\nimport checkmate from \"../img/profile.png\"\r\nimport expanse from \"../img/expanse.png\"\r\n// React-Icons //\r\nimport { GoChevronRight } from 'react-icons/go';\r\nimport { VscCode } from 'react-icons/vsc';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst Portfolio = () => {\r\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n  return (\r\n    <section id=\"portfolio\" className=\"portfolio row portfolio-container-row\">\r\n        <div className=\"container\">\r\n  \r\n          <div className=\"section-title\">\r\n            <h1>Work</h1>\r\n          </div>\r\n\r\n          <div className=\"row text-center px-4\">\r\n  \r\n            <div className=\"col-lg-12 col-md-10 p-4\">\r\n              <div className=\"row text-center align-items-center\">\r\n                <div className=\"col-sm\">\r\n                  <img src={ book } className=\"img-fluid\" alt=\"Book Club COllective\"/>\r\n                </div>\r\n                <div className=\"col-sm desc\">\r\n                  <h4><b>Book Club Collective</b></h4>\r\n                  <p className=\"desc\">A full stack app where users can search for books using Google’s book API, leave reviews, and join book clubs with other readers. Book Club Collective uses a folder structure that matches the MVC paradigm as well as Node.js and Express to create a RESTful API. The site also uses MySQL and Sequelize for the database and npm star-rating.js to create a star rating system out of 5 for the book reviews and then averages them out per book.</p>\r\n                  <p><b>Technologies: Handlebars, Node.js, MySQL, Sequelize, Express, and bcrypt.</b></p>\r\n                  <div class=\"portfolio-links\">\r\n                    <a href=\"https://github.com/hannahnmcdonald/Book-Club-Collective\" title=\"Github Repo\"><VscCode className=\"icons portfolio-icon\" /></a>\r\n                    <a href=\"https://intense-tor-64466.herokuapp.com/\" title=\"Website\"><GoChevronRight className=\"icons portfolio-icon\" /></a>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          { isMobile ? (\r\n\r\n            <div className=\"col-lg-12 col-md-10 p-4\">\r\n              <div className=\"row text-center align-items-center\">\r\n              <div className=\"col-sm\">\r\n                <img src= { checkmate } className=\"img-fluid\" alt=\"Check-Mate\"/>\r\n              </div>\r\n                <div className=\"col-sm desc\">\r\n                  <h4><b>Check Mate</b></h4>\r\n                    <p className=\"desc\">CheckMate is an app to keep track of your game nights with friends and family! Check Mate is a full stack application enabling a user to create a profile, add friends, and create matches with friends for board games. Users can begin game events and record the results to the participating players' individual stats, stored in a Mongo Database, and shown on their profile, along with some of their favorite games and most won or lost games. Users are able to research the stats of their friends and themselves. They can also submit and review alternate game rule sets for their favorite games and can access game specific rules and information from the Board Game Atlas API.</p>\r\n                    <p><b>Technologies: Js, MongoDB, Apollo, GraphQL, React, MaterialUI</b></p>\r\n                  <div className=\"portfolio-links\">\r\n                    <a href=\"https://github.com/hannahnmcdonald/check-mate\" title=\"Github Repo\"><VscCode className=\"icons portfolio-icon\" /></a>\r\n                    <a href=\"https://check-mate-game-app.herokuapp.com/\" title=\"Website\"><GoChevronRight className=\"icons portfolio-icon\" /></a>\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n          ) : \r\n          \r\n          <div className=\"col-lg-12 col-md-10 p-4\">\r\n              <div className=\"row text-center align-items-center\">\r\n                <div className=\"col-sm desc\">\r\n                  <h4><b>Check Mate</b></h4>\r\n                  <p className=\"desc\">CheckMate is an app to keep track of your game nights with friends and family! Check Mate is a full stack application enabling a user to create a profile, add friends, and create matches with friends for board games. Users can begin game events and record the results to the participating players' individual stats, stored in a Mongo Database, and shown on their profile, along with some of their favorite games and most won or lost games. Users are able to research the stats of their friends and themselves. They can also submit and review alternate game rule sets for their favorite games and can access game specific rules and information from the Board Game Atlas API.</p>\r\n                  <p><b>Technologies: Js, MongoDB, Apollo, GraphQL, React, MaterialUI</b></p>\r\n                  <div className=\"portfolio-links\">\r\n                    <a href=\"https://github.com/hannahnmcdonald/check-mate\" title=\"Github Repo\"><VscCode className=\"icons portfolio-icon\" /></a>\r\n                    <a href=\"https://check-mate-game-app.herokuapp.com/\" title=\"Website\"><GoChevronRight className=\"icons portfolio-icon\" /></a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                  <img src= { checkmate } className=\"img-fluid\" alt=\"Check-Mate\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n\r\n\r\n            {/* <div className=\"col-lg-12 col-md-10 p-4\">\r\n              <div className=\"row text-center align-items-center\">\r\n                <div className=\"col-sm desc\">\r\n                  <h4><b>Check Mate</b></h4>\r\n                  <p className=\"desc\">CheckMate is an app to keep track of your game nights with friends and family! Check Mate is a full stack application enabling a user to create a profile, add friends, and create matches with friends for board games. Users can begin game events and record the results to the participating players' individual stats, stored in a Mongo Database, and shown on their profile, along with some of their favorite games and most won or lost games. Users are able to research the stats of their friends and themselves. They can also submit and review alternate game rule sets for their favorite games and can access game specific rules and information from the Board Game Atlas API.</p>\r\n                  <p><b>Technologies: Js, MongoDB, Apollo, GraphQL, React, MaterialUI</b></p>\r\n                  <div className=\"portfolio-links\">\r\n                    <a href=\"https://github.com/hannahnmcdonald/check-mate\" title=\"Github Repo\"><VscCode className=\"icons portfolio-icon\" /></a>\r\n                    <a href=\"https://check-mate-game-app.herokuapp.com/\" title=\"Website\"><GoChevronRight className=\"icons portfolio-icon\" /></a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                  <img src= { checkmate } className=\"img-fluid\" alt=\"Check-Mate\"/>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n\r\n            <div className=\"col-lg-12 col-md-10 p-4\">\r\n              <div className=\"row text-center align-items-center\">\r\n                <div className=\"col-sm\">\r\n                  <img src= { expanse } className=\"img-fluid\" alt=\"Quiz\"/>\r\n                </div>\r\n                <div className=\"col-sm desc \">\r\n                  <h4><b>The Expanse Trivia Quiz</b></h4>\r\n                  <p>Play this timed quiz game for the hit sci-fi series 'The Expanse.' This quiz follows questions from seasons 1-5. Test your knowledge, save your high score, and play against your friends!</p>\r\n                  <p><b>Technologies: Vanilla Javascript, HTML, CSS</b></p>\r\n                  <div className=\"portfolio-links\">\r\n                    <a href=\"https://github.com/hannahnmcdonald/TheExpanseTriviaQuiz/\" title=\"Github Repo\"><VscCode className=\"icons portfolio-icon\" /></a>\r\n                    <a href=\"https://hannahnmcdonald.github.io/TheExpanseTriviaQuiz/\" title=\"Website\"><GoChevronRight className=\"icons portfolio-icon\" /></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Portfolio","// Import React //\r\nimport React, { useState, useRef } from 'react';\r\n// Import EmailJS npm //\r\nimport emailjs from \"emailjs-com\";\r\n// Import React Hook Form npm //\r\nimport {useForm} from \"react-hook-form\";\r\n// Import error message from @ hookform-error/message //\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nconst Contact = () => {\r\n\r\n    const form = useRef();\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        criteriaMode: 'all',\r\n    });\r\n\r\n    const serviceID = \"service_wsmwm9a\";\r\n    const templateID = \"template_ID\";\r\n    const userID = \"user_qMnjKVkykEbwbYN5lizxs\";\r\n\r\n    const onSubmit = (data, r) => {\r\n        \r\n        sendEmail(\r\n            serviceID, \r\n            templateID,\r\n            {\r\n                name: data.name,\r\n                email: data.email,\r\n                subject: data.subject,\r\n                message: data.message\r\n            },\r\n            userID\r\n            )\r\n            // Reset Form\r\n            r.target.reset();\r\n    }\r\n\r\n\r\n    const sendEmail = () => {\r\n        emailjs.send(serviceID, templateID, form.current, userID)\r\n          .then(() => {\r\n            setSuccessMessage(\"Form sent successfully! I'll contact you soon!\");\r\n          }).catch(err => console.error(`Something went wrong ${err}`));\r\n      };\r\n\r\n    return (\r\n        <div className= \"contact\">\r\n            <div className=\"text-center\">\r\n                <h1> Contact </h1>\r\n                    <h6> Submit your message or email me at hannahcodes@protonmail.com and I will get back to you as soon as I can. </h6>\r\n                {/* Success Message when form is successfully sent */}\r\n                <span className=\"success-message\"> { successMessage } </span>\r\n            </div>\r\n            <div className=\"container\">\r\n                {/* Form Submit */}\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-md-6 col-xs-12\">\r\n                            {/* Name Input */}\r\n                            <input \r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            {...register(\"name\", \r\n                            { required: true, \r\n                                maxLength:20,\r\n                                pattern: {\r\n                                    message: 'Please enter a valid name',\r\n                                }\r\n                            })}\r\n                            />\r\n                            {/* {errors.firstName && <p>Please enter your name</p>} */}\r\n                            <ErrorMessage\r\n                                errors={errors}\r\n                                name=\"multipleErrorInput\"\r\n                                render={({ messages }) =>\r\n                                messages &&\r\n                                Object.entries(messages).map(([type, message]) => (\r\n                                    <p className=\"error-message\" key={type}>{message}</p>\r\n                                ))\r\n                            }\r\n                            />\r\n                            {/* <span className=\"error-message\">\r\n                                {error.name && error.name.message}\r\n                            </span> */}\r\n                            {/* Email */}\r\n                            <input \r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            {...register(\"email\", \r\n                            { required: true, \r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                    message: \"Email is invalid\"\r\n                                }\r\n                            })}\r\n                            // ref= {\r\n                            //     register(\"email\",\r\n                            //     {\r\n                            //         required: \"Please enter your email\",\r\n                            //         pattern: {\r\n                            //             // Email Regex //\r\n                            //             value: /^([a-z0-9_.-]+)@([\\da-z.-]+).([a-z.]{2,6})$/,\r\n                            //             message: \"Invalid Email\"\r\n                            //         }\r\n                            //     })\r\n                            // }\r\n                            />\r\n                            {/* {errors.email && <p>Please check that the email is correct</p>} */}\r\n                            <ErrorMessage\r\n                                errors={errors}\r\n                                name=\"multipleErrorInput\"\r\n                                render={({ messages }) =>\r\n                                messages &&\r\n                                Object.entries(messages).map(([type, message]) => (\r\n                                    <p className=\"error-message\" key={type}>{message}</p>\r\n                                    ))\r\n                                }\r\n                            />\r\n                            {/* Subject */}\r\n                            <input \r\n                            id=\"subject\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Subject\"\r\n                            name=\"subject\"\r\n                            {...register(\"subject\", {required: \"Please add the subject\"})}\r\n                            />\r\n                            {/* {errors.email && <p>Please enter a subject</p>} */}\r\n                            <ErrorMessage\r\n                                errors={errors}\r\n                                name=\"multipleErrorInput\"\r\n                                render={({ messages }) =>\r\n                                messages &&\r\n                                Object.entries(messages).map(([type, message]) => (\r\n                                    <p className=\"error-message\" key={type}>{message}</p>\r\n                                    ))\r\n                                }\r\n                            />\r\n                            {/* <span className=\"error-message\">\r\n                                {errors.subject && errors.subject.message}\r\n                            </span> */}\r\n                        </div>\r\n                        <div className=\"col-md-6 col-xs-12\">\r\n                            {/* Message */}\r\n                            <textarea\r\n                            id=\"message\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Message\"\r\n                            name=\"message\"\r\n                            {...register(\"message\", \r\n                                {required: \"please fill out the form\"\r\n                            })}\r\n                            ></textarea>\r\n                            {/* {errors.email && <p>Please enter your message</p>} */}\r\n                            <ErrorMessage\r\n                                errors={errors}\r\n                                name=\"multipleErrorInput\"\r\n                                render={({ messages }) =>\r\n                                messages &&\r\n                                Object.entries(messages).map(([type, message]) => (\r\n                                    <p className=\"error-message\" key={type}>{message}</p>\r\n                                    ))\r\n                                }\r\n                            />\r\n                            {/* <span className=\"error-message\">\r\n                                {errors.message && errors.message.message}\r\n                            </span> */}\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn contact-btn\" type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","// Import React //\r\nimport React from 'react';\r\n// Social Link Icons from React-Icons //\r\nimport { FaLinkedin } from 'react-icons/fa';\r\nimport { FaGithub } from 'react-icons/fa';\r\nimport { FaEnvelope } from 'react-icons/fa';\r\n\r\n\r\nconst footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className= \"container py-5 footer-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"twelve columns\">\r\n                        <div className=\"social-links\">\r\n                            <a href=\"https://www.linkedin.com/in/hannah-mcdonald-302292215/\">\r\n                                <FaLinkedin className=\"icons-footer\"/>\r\n                            </a>\r\n                            <a href= \"mailto: hannahcodes@protonmail.com\">\r\n                                <FaEnvelope className=\"icons-footer\"/>\r\n                            </a>\r\n                            <a href= \"https://github.com/hannahnmcdonald\">\r\n                                <FaGithub className=\"icons-footer\"/>\r\n                            </a>\r\n                        </div>\r\n                            <p> Created by Hannah McDonald ♥️</p>\r\n                        </div>\r\n                    <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default footer","// Import React //\r\nimport React from 'react';\r\n// Download Icon from React-Icons //\r\nimport { FaFileDownload } from 'react-icons/fa';\r\n\r\nconst resume = () => {\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <h1>Resume</h1>\r\n                <h6>You can download a PDF of my resume here</h6>\r\n                <div className=\"columns download\">\r\n                    {/* TO DO: EMBED RESUME LINK */}\r\n                    <a href= \"https://drive.google.com/file/d/1HpERXzc2HvMRMPmcEDuXEmxvw6lzFznh/view?usp=sharing\" className=\"button download-button\">\r\n                        <FaFileDownload className= \"resume\"/> Download Resume\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default resume","import './App.css';\n// Import Bootstrap //\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Import Particles.js //\nimport Particles from \"react-particles-js\";\n// Import React Components //\nimport Navbar from \"./components/navbar\";\nimport Header from \"./components/header\";\nimport About from \"./components/about\";\nimport Skills from \"./components/skills\";\nimport Portfolio from \"./components/portfolio\";\nimport Contact from \"./components/contact\";\nimport Footer from \"./components/footer\";\nimport Resume from \"./components/resume\";\n\nfunction App() {\n  return (\n    <>\n    <Particles/>\n    <Navbar/>\n    <Header/>\n    <About/>\n    <Portfolio/>\n    <Skills/>\n    <Resume/>\n    <Contact/>\n    <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}